import math, pyodbc
from xlrd import open_workbook


def connect_db():
    server = 'tcp:176.99.158.202'
    database = 'Carbon_imprint'
    username = 'guest'
    password = 'karramba'
    cnxn = pyodbc.connect(
        f'DRIVER={{ODBC Driver 17 for SQL Server}};SERVER={server};DATABASE={database};UID={username};PWD={password}',
        ansi=True)
    return cnxn.cursor()


def brutto(m, volume):
    m = float(m)
    volume = float(volume)
    quantity_cars = max(math.ceil(volume/120), math.ceil(m/69))
    print(quantity_cars * 23 + m)
    return quantity_cars * 23 + m


def insert_table(filename: str):
    book = open_workbook(f'C:\\Users\\egors\\Desktop\\{filename}.xls', on_demand=True)
    sheet = book.sheet_by_name('Sheet1')
    data = [[cell.value for cell in row] for row in sheet][1:]
    cursor = connect_db()
    for row in data:
        cursor.execute('''
            insert into
            Section_norms(
                Section,
                Electronic,
                Disel
            )
            values (?, ?, ?)
        ''', (str(row[0]), row[1], row[2]))
    cursor.commit()


def get_route_norm(start_station: str, end_station: str, brutto: float) -> list[float, float]:
    fuel = [0, 0]
    cursor = connect_db()
    cursor.execute('''
        SELECT Stations_inbetween
        from Routs
        where Start_station = ?
        and End_station = ?
    ''', start_station, end_station)

    stations = cursor.fetchone()[0].split(', ')

    for i in range(1, len(stations)):
        section = '-'.join([stations[i - 1], stations[i]])
        cursor.execute('''
            SELECT Electronic, Disel
            from Section_norms
            where Section = ?
        ''', section)
        norms = cursor.fetchone()
        print(norms)
        fuel[0] += norms[0]*(brutto/10)
        fuel[1] += norms[1]*(brutto/10)
    print(fuel)
    return fuel


def oxygen_imprint(fuel: list) -> float:
    return round(fuel[0]*1.7405*0.6425 + fuel[1]*2.172)  # тонны углеродного следа


def translate(string: str) -> str:
    translator = {65: 1040, 66: 1042, 67: 1057, 69: 1045, 78: 1048, 75: 1050, 77: 1052, 72: 1053, 79: 1054, 80: 1056, 84: 1058, 88: 1061}
    string_new = ''

    for i in range(len(string)):
        print(string[i], ord(string[i]))
        if ord(string[i]) not in range(1040, 1072) and ord(string[i]) not in (44, 45, 41, 40, 32, 49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 95, 46):
            string_new += chr(translator[ord(string[i])])
        else:
            string_new += string[i]

    return string_new


def translate_routs() -> None:
    cursor = connect_db()
    for i in cursor.fetchall():
        cursor.execute('''
            update Routs
            set Start_station = ?,
            End_station = ?,
            Stations_inbetween = ?
            where Stations_inbetween = ?
        ''', translate(i[0]), translate(i[1]), translate(i[2]), i[2])
        cursor.commit()


def translate_section_norms() -> None:
    cursor = connect_db()
    cursor.execute('select Section from Section_norms')
    t = [('BИXOP-KOPШ',), ('BИXOP-TAЙШ',), ('BИXOP-TEПЛ',), ('BИXOP-TOPEЯ',), ('CAЯHC-Н-УД',), ('CEBPБ-KИPEH',),
         ('CEBPБ-TAKCM',), ('CEBPБ-УOЯH',), ('CЛЮД1-БЛУГ',), ('H-УДK-TAЙШ',), ('H-УДK-TУЛУH',), ('H-УДK-ЗИMA',),
         ('H-УДK-ИЛAHC',), ('H-ЧAP-TAKCM',), ('H-ЧAP-XAHИ',), ('H-ЧAP-КУАНДА',), ('HШK-ЗДK-У-У',), ('KOPШ -BИXOP',),
         ('KOPШH-ЛEH-B',), ('KИPEH-CEBPБ',), ('KИPEH-ЛEHA',), ('KИЖA -ГOPX',), ('TAKCM-CEBPБ',), ('TAKCM-H-ЧAP',),
         ('TAЙШ -BИXOP',), ('TAЙШ -H-УДK',), ('TAЙШ -ИЛAHC',), ('TAЙШ -ЧУHA',), ('TAЙШ -ЮPTЫ',), ('TOPEЯ-BИXOP',),
         ('TOPEЯ-TУPMA',), ('TУPMA-TOPEЯ',), ('TУЛУH-H-УДK',), ('XИЛOK-У-УДЭ',), ('АНГАС-Б-ЛУГ',), ('БPT-TШТ',),
         ('БАЙКАЛЬСК-И-СОРТ',), ('БАЙКАЛЬСК-И-СОРТ(ГЛ)',), ('БАЛБУХТА-СЮЛЬБАН',), ('БЛУГ -CЛЮД1',), ('Б-ЛУГ-АНГАСОЛ',),
         ('БЛУГ-СЛЮД1',), ('БП-1820КМ-НОВАЯ-ЧАРА',), ('БП1820КМ-ХАНИ',), ('ВИХ-БТК-КОРШУНИХА',), ('ВИХОРЕВКА-ЛЕНА',),
         ('ВИХОРЕВКА-Н-УД',), ('ВИХОРЕВКА-Н-УДИНСК',), ('ВИХОРЕВКА-ХРЕБТОВАЯ',), ('ВИХОР-ИЛАНС',), ('ВИХОР-ИЛАНСКАЯ',),
         ('ВИХОР-ЛЕНА',), ('ВИХОР-Н-УДИНСК',), ('ВИХОР-САЯНСКАЯ',), ('ГOPX -KИЖA',), ('ГАЛАЧ-ТШТ',),
         ('ГЫРШЕЛУН-УЛАН-УДЭ',), ('ЗАГУСТАЙ-НАУШКИ',), ('ЗВЕЗДНАЯ-ЧУДН',), ('ЗИMA -H-УДK',), ('ЗИMA -TУЛУH',),
         ('ЗИMA -ИPK-C',), ('ЗИMA-CЛЮД1(БАМ)',), ('ЗИМА-ИРКПАСС',), ('ЗИМА-ИРКУТСК СОРТ',), ('ЗИМА-И-СОРТ',),
         ('ЗИМА-КИТОЙ-КОМБИН',), ('ЗИМА-СЛЮД1 (БАМ)',), ('ЗИМА-СЛЮД1 (ГЛАВ)',), ('ЗИМА-СЛЮД1 (ГЛАВН)',),
         ('ЗИМА-СЛЮД1(БАМ)',), ('ЗИМА-ТАЙШ',), ('ИKAБH-БП1820KМ',), ('ИKAБЬ-БП1820KМ',), ('ИPK-C-СЛЮДЯНКА 1',),
         ('ИPK-C-ЧEPEM',), ('ИКАБЬЯ-НОВАЯ-ЧАРА',), ('ИЛAHC-H-УДK',), ('ИЛAHC-TAЙШ',), ('ИЛАНС-ВИХОР',),
         ('ИЛАНСК-ВИХОР',), ('ИЛАНСК-Н-УДИНСК',), ('ИРК ПАСС-СЛЮДЯНКА1',), ('ИРК ПАСС-УЛАН-УДЭ',), ('ИРКПАСС-ЗИМА',),
         ('ИРК-П-Н-УДК',), ('ИРК-С-БАЙКАЛЬСК',), ('ИРК-С-БАЙКАЛЬСК(ГЛ)',), ('ИРК-С-ЗИМА',), ('ИРК-С-Н-УДК',),
         ('ИРК-С-СЛЮДЯНКА 1',), ('ИРК-С-У-УДЭ (ГЛАВ)',), ('ИРК-С-У-УДЭ (ГЛАВ)',), ('ИРКУТСК-СОРТ-У-УДЭ БАМ',),
         ('И-СОРТ-У-УДЭ',), ('КИРЕНГА-КУНЕРМА',), ('КИРЕНГА-НЕБЕЛЬ',), ('КИРЕНГА-УОЯН',), ('КИРЕН-КОРШН',),
         ('КИРЕН-ЛЕНА',), ('КИТОЙ КОМБ.-ЗИМА',), ('КОРШН-РУДГР',), ('КОРШУНИХА-XPБ-У-И',), ('КОРШУНИХА-БТК-ВИХ',),
         ('КОРШУНИХА-КИРЕНГА',), ('КОРШУНИХА-ЛЕНА',), ('КОРШУНИХА-ЛЕНА ВОСТ',), ('КОРШУНИХА-ПРЕДЛЕНСКИЙ',),
         ('КОРШУНИХА-ХРЕБТОВАЯ',), ('КРАСН ВОСТ-ТАЙШЕТ',), ('КУАНДА-H-ЧAP',), ('КУАНДА-СЮЛЬБАН',), ('КУАНДА-ТАКСМО',),
         ('КУНЕРМА-КИРЕН',), ('КУНЕРМА-СЕВРБ',), ('ЛEHA -KИPEH',), ('ЛEH-B-KOPШH',), ('ЛЕНА-ВИХОР',), ('ЛЕНА-КИРЕНГА',),
         ('ЛЕНА-КОРШН',), ('ЛЕНА-СЕВРБ',), ('ЛЕНА-ХРЕБТ',), ('ЛЕНА-ЧУДНИЧНЫЙ',), ('ЛЕН-В-КОРШН',), ('ЛЕПРИНДО-Н ЧАРА',),
         ('МАКАРЬЕВО-ЧЕРЕМХОВО',), ('МОСТОВОЙ-НАУШКИ',), ('МОСТОВОЙ-ХИЛОК',), ('МУРУРИН-НОВАЯ-ЧАРА',),
         ('МУРУРИН-ХАНИ',), ('Н УДИНСК-ИРК ПАСС',), ('Н ЧАРА-БП1820КМ',), ('Н ЧАРА-ИКАБЬЯ',), ('Н ЧАРА-МУРУРИН',),
         ('НАУШК-ЗАГУС',), ('НАУШК-МОСТОВОЙ',), ('НАУШК-ТАЛЬЦЫ',), ('НАУШ-УЛ_БАТОР',), ('НЕБЕЛЬ-КИРЕНГА',),
         ('НЕБЕЛЬ-НИЯ',), ('НИЯ-НЕБЕЛЬ',), ('НОВАЯ-ЧАРА-ЛЕПРИНДО',), ('Н-УД -CAЯHC',), ('Н-УДИНСК-ИЛАНСКАЯ',),
         ('Н-УДИНСК-ИРКУТСК',), ('Н-УДИНСК-ИРКУТСК ПАСС',), ('Н-УДК-ВИХОР',), ('Н-УДК-САЯНСКАЯ',), ('Н-УД-ЧЕРЕМХОВО',),
         ('Н-УОЯН-ТАКСИМО( ЧЗ ПЕРЕВАЛ)',), ('Н-УОЯН-ТАКСИМО( ЧЗ ТОННЕЛЬ)',), ('Н-ЧАРА-ЮКТАЛИ',),
         ('ОКУСИКАН-ИТЫКИТ(ЧЗПЕРЕВАЛ)',), ('ОКУСИКАН-ТАКСИМО',), ('ОНОХОЙ-СЛЮДЯНКА-2',), ('ПАД.ПОРОГИ-ВХР-TШT',),
         ('ПБАЙК-СЛЮД1',), ('П-ЗАВ-СЛЮДЯНКА-1',), ('П-ЗАВ-СЛЮДЯНКА-2',), ('П-ЗАВ-УЛАН-УДЭ',), ('ПРЕДЛЕНСКИЙ-КОРШН',),
         ('РУДГР-КОРШН',), ('САЯНСКАЯ-Н-УДИНСК',), ('САЯНСКАЯ-ТАЙШЕТ',), ('САЯНСКАЯ-ТАЙШЕТ(УЯР)',),
         ('СЕВЕРОБАЙКАЛ-ЛЕНА',), ('СЕВРБ-КУНЕРМА',), ('СЕВРБ-ЛЕНА',), ('СЛЮД1-ЗИМА(БАМ)',), ('СЛЮД2-П ЗАВОД',),
         ('СЛЮД2-УЛАН-УДЭ',), ('СЛЮД-ТАЛЬЦЫ',), ('СЛЮДЯНКА 1-ИPK-C',), ('СЛЮДЯНКА 1-ИРК-С',), ('СЛЮДЯНКА-1-БАЙКАЛ',),
         ('СЛЮДЯНКА-1-БЛУГ',), ('СЛЮДЯНКА-1-ЗИМА',), ('СЛЮДЯНКА-1-ЗИМА (БАМ)',), ('СЛЮДЯНКА-1-ЗИМА (ГЛАВ)',),
         ('СЛЮДЯНКА-1-ИРК-П',), ('СЛЮДЯНКА1-П ЗАВОД',), ('СЛЮДЯНКА2-ОНОХОЙ',), ('СЛЮДЯНКА-2-УЛАН-УДЭ',),
         ('СЮЛЬБ-БАЛБХ',), ('СЮЛЬБ-КУАНДА',), ('СЮЛЬБ-ТАКСМО',), ('ТАЙШЕТ-КРВ',), ('ТАЙШЕТ-САЯНСКАЯ',),
         ('ТАЙШЕТ-САЯНСКАЯ(УЯР)',), ('ТАЙШ-ЗИМА',), ('ТАКСИМО-КУАНДА',), ('ТАКСИМО-СЮЛЬБАН',), ('ТАКСМО-ОКУСИКАН',),
         ('ТАКСМО-УОЯН ( ЧЗ ПЕРЕВАЛ)',), ('ТАКСМО-УОЯН ( ЧЗ ТОННЕЛЬ)',), ('ТАКУ-CЮЛЬБ',), ('ТАЛЬЦЫ-НАУШКИ',),
         ('ТАЛЬЦЫ-СЛЮД',), ('ТАЛЬЦЫ-СЛЮДЯНКА-2',), ('ТУЛУН-ЗИМА',), ('ТУЛУН-И СОРТ',), ('ТУЛУН-УК',),
         ('ТУЛУН-ЧЕРЕМХОВО',), ('ТШТ-ГАЛАЧ',), ('УOЯH -CEBPБ',), ('У-И-XPБ-КОРШУНИХА',), ('У-ИЛ-ХРЕБТ',), ('УК-ТУЛУН',),
         ('УЛ_БАТОР-НАУШ',), ('УЛАН-УДЭ-ИРК-П',), ('УЛАН-УДЭ-ИРК-С',), ('УЛАН-УДЭ-ИРК-С (ГЛАВ)',),
         ('УЛАН-УДЭ-ИРК-С БАМ',), ('УЛАНУДЭ-ПЕТРОВСКИЙЗ',), ('УЛАН-УДЭ-СЛЮД2',), ('У-УДЭ-XИЛOK',), ('У-УДЭ-СЛЮДЯНКА2',),
         ('У-У-ЗДK-HШK',), ('ХАНИ-БП1820КМ',), ('ХАНИ-МУРУРИН',), ('ХАНИ-Н-ЧАРА',), ('ХИЛОК-МОСТОВОЙ',),
         ('ХРЕБТ-ВИХОР',), ('ХРЕБТ-КОРШН',), ('ХРЕБТОВАЯ-ЛЕНА',), ('ХРЕБТОВАЯ-У-И',), ('ЧEPEM-ИPK-C',),
         ('ЧЕРЕМХОВО-МАКАР',), ('ЧЕРЕМХОВО-Н-УДК',), ('ЧЕРЕМХОВО-ТУЛУН',), ('ЧУHA -TAЙШ',), ('ЧУДНИЧН-ЗВЕЗДН',),
         ('ЧУДНИЧНЫЙ-ЗВЕЗДНАЯ',), ('ЧУДНИЧНЫЙ-ЛЕНА',), ('ЧУДН-ЛЕНА',), ('ЮPTЫ -TAЙШ',), ('ЮКТАЛИ-НОВАЯ-ЧАРА',)]
    for item in cursor.fetchall():
        cursor.execute('''
            update Section_norms
            set Section = ?
            where Section = ?
        ''', translate(item[0]), item[0])
    cursor.commit()
